From 27e09ebf0cdd39ca60d5fc583c3563a9abcf3ed0 Mon Sep 17 00:00:00 2001
From: Pierre-Hugues Husson <phh@phh.me>
Date: Wed, 7 Feb 2024 05:06:32 -0500
Subject: [PATCH 22/24] Include Samsung AIDL camera ids

---
 services/camera/libcameraservice/Android.bp   |  1 +
 .../common/aidl/AidlProviderInfo.cpp          | 21 +++++++++++++++++++
 2 files changed, 22 insertions(+)

diff --git a/services/camera/libcameraservice/Android.bp b/services/camera/libcameraservice/Android.bp
index 2d87ea19e5..b2807ecd08 100644
--- a/services/camera/libcameraservice/Android.bp
+++ b/services/camera/libcameraservice/Android.bp
@@ -115,6 +115,7 @@ cc_defaults {
         "android.hardware.camera.provider-V3-ndk",
         "vendor.samsung.hardware.camera.provider@3.0",
         "vendor.samsung.hardware.camera.provider@4.0",
+        "vendor.samsung.hardware.camera.provider-V1-ndk",
         "libaidlcommonsupport",
         "libbinderthreadstateutils",
         "libcameraservice_device_independent",
diff --git a/services/camera/libcameraservice/common/aidl/AidlProviderInfo.cpp b/services/camera/libcameraservice/common/aidl/AidlProviderInfo.cpp
index 4bfe11d5c6..a640286a0a 100644
--- a/services/camera/libcameraservice/common/aidl/AidlProviderInfo.cpp
+++ b/services/camera/libcameraservice/common/aidl/AidlProviderInfo.cpp
@@ -33,6 +33,8 @@
 #include <utils/SessionConfigurationUtils.h>
 #include <utils/Trace.h>
 
+#include <aidl/vendor/samsung/hardware/camera/provider/ISehCameraProvider.h>
+
 namespace {
 const bool kEnableLazyHal(property_get_bool("ro.camera.enableLazyHal", false));
 } // anonymous namespace
@@ -172,6 +174,25 @@ status_t AidlProviderInfo::initializeAidlProvider(
         return mapToStatusT(status);
     }
 
+    if(true) {
+        AIBinder *ext;
+        auto spaibinder = interface->asBinder();
+
+        status_t ret = AIBinder_getExtension(spaibinder.get(), &ext);
+        ALOGE("Grabbing CameraProvider extension got %d", ret);
+        if (ret == android::OK) {
+            using aidl::vendor::samsung::hardware::camera::provider::ISehCameraProvider;
+            std::shared_ptr<ISehCameraProvider> provider = ISehCameraProvider::fromBinder(ndk::SpAIBinder(ext));
+            ALOGE("Trying to get ISehCameraProvider...");
+            if (provider != nullptr) {
+                ALOGE("Got it!");
+                if(property_get_bool("persist.sys.phh.samsung.camera_ids", false)) {
+                    provider->getCameraIdListAll(&retDevices);
+                }
+            }
+        }
+    }
+
     for (auto& name : retDevices) {
         uint16_t major, minor;
         std::string type, id;
-- 
2.34.1

